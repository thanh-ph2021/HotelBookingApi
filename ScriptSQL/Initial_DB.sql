DROP DATABASE HOTEL_BOOKING_DB;
GO

CREATE DATABASE HOTEL_BOOKING_DB;
GO

USE HOTEL_BOOKING_DB;
GO

CREATE TABLE UserRole (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE Users (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	UserRoleId UNIQUEIDENTIFIER NOT NULL,
    FullName NVARCHAR(255) NOT NULL,
    Email NVARCHAR(255) UNIQUE NOT NULL,
    PasswordHash NVARCHAR(MAX) NOT NULL,
    Phone NVARCHAR(20) NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE(),

	CONSTRAINT FK_Users_UserRole FOREIGN KEY (UserRoleId) REFERENCES UserRole(Id) ON DELETE CASCADE
);

CREATE TABLE Hotels (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    OwnerId UNIQUEIDENTIFIER NOT NULL,
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX) NULL,
    Address NVARCHAR(MAX) NOT NULL,
    City NVARCHAR(100) NULL,
    Country NVARCHAR(100) NULL,
    Latitude DECIMAL(10, 7) NULL,
    Longitude DECIMAL(10, 7) NULL,
    Rating DECIMAL(3, 2) DEFAULT 0,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE(),

    CONSTRAINT FK_Hotels_Owner FOREIGN KEY (OwnerId) 
    REFERENCES Users(Id) ON DELETE CASCADE
);

CREATE TABLE HotelImages (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    HotelId UNIQUEIDENTIFIER NOT NULL,
    ImageUrl NVARCHAR(500) NOT NULL,
    IsBanner BIT DEFAULT 0, -- 1: banner image, 0: normal image
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (HotelId) REFERENCES Hotels(Id) ON DELETE CASCADE
);

CREATE TABLE Rooms (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    HotelId UNIQUEIDENTIFIER NOT NULL,
    Name NVARCHAR(255) NOT NULL,
	Description NVARCHAR(MAX),
    PricePerNight DECIMAL(10,2) NOT NULL,
    Capacity INT NOT NULL,
    Amenities NVARCHAR(MAX),
	TotalRooms INT,
    AvailableRooms INT,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK_Rooms_Hotels FOREIGN KEY (HotelId) REFERENCES Hotels(Id) ON DELETE CASCADE,
);

CREATE TABLE RoomImages (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    RoomId UNIQUEIDENTIFIER NOT NULL,
    ImageUrl NVARCHAR(500) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (RoomId) REFERENCES Rooms(Id) ON DELETE CASCADE
);

CREATE TABLE StatusTypes (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Status (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	StatusTypeId UNIQUEIDENTIFIER NOT NULL,
    Name NVARCHAR(20) NOT NULL,
	CONSTRAINT FK_Statuses_StatusTypes FOREIGN KEY (StatusTypeId) REFERENCES StatusTypes(Id) ON DELETE CASCADE,
);

CREATE TABLE Bookings (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER NOT NULL,
    RoomId UNIQUEIDENTIFIER NOT NULL,
	StatusId UNIQUEIDENTIFIER NOT NULL,
    CheckInDate DATE NOT NULL,
    CheckOutDate DATE NOT NULL,
    TotalPrice DECIMAL(10, 2) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE(),

    CONSTRAINT FK_Bookings_Users FOREIGN KEY (UserId) 
        REFERENCES Users(Id) ON DELETE CASCADE,
    
    CONSTRAINT FK_Bookings_Rooms FOREIGN KEY (RoomId) 
        REFERENCES Rooms(Id),

    CONSTRAINT FK_Bookings_Status FOREIGN KEY (StatusId) 
        REFERENCES Status(Id)
);

CREATE TABLE PaymentMethods (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(50) NOT NULL UNIQUE
);


CREATE TABLE Payments (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    BookingId UNIQUEIDENTIFIER NOT NULL,
    UserId UNIQUEIDENTIFIER NOT NULL,
    Amount DECIMAL(10,2) NOT NULL,
    PaymentMethodId UNIQUEIDENTIFIER NOT NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    TransactionId NVARCHAR(255) UNIQUE,
    CreatedAt DATETIME2 DEFAULT GETDATE(),

    CONSTRAINT FK_Payments_Bookings FOREIGN KEY (BookingId) REFERENCES Bookings(Id) ON DELETE CASCADE,
    CONSTRAINT FK_Payments_Users FOREIGN KEY (UserId) REFERENCES Users(Id),
    CONSTRAINT FK_Payments_PaymentMethods FOREIGN KEY (PaymentMethodId) REFERENCES PaymentMethods(Id),
    CONSTRAINT FK_Payments_Statuses FOREIGN KEY (StatusId) REFERENCES Status(Id)
);

CREATE TABLE Reviews (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER NOT NULL,
    HotelId UNIQUEIDENTIFIER NOT NULL,
	RoomType NVARCHAR(255) NOT NULL,
    StayDuration INT NOT NULL,
    StayMonth DATE NOT NULL,
    Rating DECIMAL(3,1) NOT NULL CHECK (Rating BETWEEN 1 AND 10),
	Title NVARCHAR(MAX),
    Description NVARCHAR(MAX),
    CreatedAt DATETIME2 DEFAULT GETDATE(),
	UsefulCount INT DEFAULT 0,
    NotUsefulCount INT DEFAULT 0,

    CONSTRAINT FK_Reviews_Users FOREIGN KEY (UserId) REFERENCES Users(Id) ON DELETE CASCADE,
    CONSTRAINT FK_Reviews_Hotels FOREIGN KEY (HotelId) REFERENCES Hotels(Id)
);

CREATE TABLE Promotions (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    HotelId UNIQUEIDENTIFIER NOT NULL,
    DiscountPercentage DECIMAL(5, 2) NOT NULL,
    StartDate DATETIME NOT NULL,
    EndDate DATETIME NOT NULL,
    CreatedAt DATETIME2 DEFAULT GETDATE(),

    CONSTRAINT FK_Promotions_Hotels FOREIGN KEY (HotelId) REFERENCES Hotels(Id) ON DELETE CASCADE
);

CREATE TABLE SupportTickets (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER NOT NULL,
    Subject NVARCHAR(255) NOT NULL,
    Message NVARCHAR(MAX) NOT NULL,
    StatusId UNIQUEIDENTIFIER NOT NULL,
    CreatedAt DATETIME2 DEFAULT GETDATE(),
    UpdatedAt DATETIME2 DEFAULT GETDATE(),

    CONSTRAINT FK_SupportTickets_Users FOREIGN KEY (UserId) REFERENCES Users(Id) ON DELETE CASCADE,
	CONSTRAINT FK_SupportTickets_Status FOREIGN KEY (StatusId) REFERENCES Status(Id)
);

CREATE TABLE Favorites (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER NOT NULL,
    HotelId UNIQUEIDENTIFIER NOT NULL,
    CreatedAt DATETIME2 DEFAULT GETDATE(),

    CONSTRAINT FK_Favorites_Users FOREIGN KEY (UserId) REFERENCES Users(Id) ON DELETE CASCADE,
    CONSTRAINT FK_Favorites_Hotels FOREIGN KEY (HotelId) REFERENCES Hotels(Id)
);

INSERT INTO PaymentMethods (Name) VALUES 
('Credit Card'), 
('PayPal'), 
('Bank Transfer');

INSERT INTO UserRole(Name) VALUES 
('Customer'), 
('Hotel Owner'), 
('Admin');

INSERT INTO StatusTypes(Name) VALUES 
('Booking'), 
('Payment');

INSERT INTO Status (StatusTypeId, Name) 
VALUES 
    ((SELECT Id FROM StatusTypes WHERE Name = 'Booking'), N'Pending'),
    ((SELECT Id FROM StatusTypes WHERE Name = 'Booking'), N'Confirmed'),
    ((SELECT Id FROM StatusTypes WHERE Name = 'Booking'), N'Completed'),
    ((SELECT Id FROM StatusTypes WHERE Name = 'Booking'), N'Cancelled');

INSERT INTO Status (StatusTypeId, Name) 
VALUES 
    ((SELECT Id FROM StatusTypes WHERE Name = 'Payment'), N'Pending'),
    ((SELECT Id FROM StatusTypes WHERE Name = 'Payment'), N'Failed'),
    ((SELECT Id FROM StatusTypes WHERE Name = 'Payment'), N'Completed');

ALTER TABLE Hotels ADD IsDeleted BIT NOT NULL DEFAULT 0
ALTER TABLE Rooms ADD IsDeleted BIT NOT NULL DEFAULT 0

ALTER TABLE Bookings
ALTER COLUMN CheckInDate DATETIME;

ALTER TABLE Bookings
ALTER COLUMN CheckOutDate DATETIME;

ALTER TABLE Payments
ADD PaidAt DATETIME NULL;

ALTER TABLE Users
ADD Country NVARCHAR(50) NULL;
